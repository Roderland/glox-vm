Lox 中的全局变量是“后期绑定”的，或者是动态解析的。
这意味着您可以在定义全局变量之前编译一段引用全局变量的代码。
只要代码在定义发生之前不执行，一切都很好。
实际上，这意味着您可以在函数体内引用后面的变量。

变量是使用变量声明产生的，这意味着现在也是为我们的编译器添加对语句的支持的时候了。
如果您还记得，Lox 将语句分为两类。
“声明”是那些将新名称绑定到值的语句。
其他类型的语句——控制流、打印等——被称为“语句”。
我们不允许在控制流语句中直接声明，如下所示：

if (monday) var croissant = "yes"; // Error.

statement      → exprStmt
               | forStmt
               | ifStmt
               | printStmt
               | returnStmt
               | whileStmt
               | block ;

declaration    → classDecl
               | funDecl
               | varDecl
               | statement ;

块的工作有点像括号对表达式的作用。 块允许您将“低优先级”声明语句放在只允许“高优先级”非声明语句的地方。